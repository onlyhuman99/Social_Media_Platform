name: Auto-Deploy Social Media Platform

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # Build and test backend
  backend:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: SocialMedia
          MYSQL_USER: socialuser
          MYSQL_PASSWORD: socialpass
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run backend tests
      working-directory: ./social-backend
      run: mvn clean test
      env:
        SPRING_PROFILES_ACTIVE: test
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/SocialMedia
        SPRING_DATASOURCE_USERNAME: socialuser
        SPRING_DATASOURCE_PASSWORD: socialpass

    - name: Build backend JAR
      working-directory: ./social-backend
      run: mvn clean package -DskipTests

    - name: Upload backend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-jar
        path: social-backend/target/*.war
        retention-days: 30

  # Deploy frontend to Vercel
  deploy-frontend:
    needs: backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: social-frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./social-frontend
      run: npm ci

    - name: Run frontend linting
      working-directory: ./social-frontend
      run: npm run lint

    - name: Build frontend
      working-directory: ./social-frontend
      run: npm run build

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./social-frontend
        vercel-args: '--prod'

    - name: Get Vercel URL
      id: vercel-url
      run: |
        echo "url=https://${{ secrets.VERCEL_PROJECT_ID }}.vercel.app" >> $GITHUB_OUTPUT

  # Deploy backend to Railway
  deploy-backend:
    needs: backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download backend artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-jar
        path: ./artifacts/backend

    - name: Deploy to Railway
      uses: railwayapp/railway-deploy@v1
      with:
        railway-token: ${{ secrets.RAILWAY_TOKEN }}
        service: ${{ secrets.RAILWAY_SERVICE_NAME }}

    - name: Get Railway URL
      id: railway-url
      run: |
        echo "url=https://${{ secrets.RAILWAY_SERVICE_NAME }}.railway.app" >> $GITHUB_OUTPUT

  # Deploy to Netlify (Alternative frontend option)
  deploy-netlify:
    needs: backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: social-frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./social-frontend
      run: npm ci

    - name: Build frontend
      working-directory: ./social-frontend
      run: npm run build

    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './social-frontend/dist'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # Deploy to Render (Alternative backend option)
  deploy-render:
    needs: backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download backend artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-jar
        path: ./artifacts/backend

    - name: Deploy to Render
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}

  # Notify deployment success
  notify:
    needs: [deploy-frontend, deploy-backend, deploy-netlify, deploy-render]
    runs-on: ubuntu-latest
    if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
    - name: Deployment Status
      run: |
        echo "üéâ Deployment Status Report:"
        echo "================================"
        
        if [ "${{ needs.deploy-frontend.result }}" == "success" ]; then
          echo "‚úÖ Frontend deployed to Vercel: https://${{ secrets.VERCEL_PROJECT_ID }}.vercel.app"
        else
          echo "‚ùå Frontend Vercel deployment failed"
        fi
        
        if [ "${{ needs.deploy-netlify.result }}" == "success" ]; then
          echo "‚úÖ Frontend deployed to Netlify: https://${{ secrets.NETLIFY_SITE_ID }}.netlify.app"
        else
          echo "‚ùå Frontend Netlify deployment failed"
        fi
        
        if [ "${{ needs.deploy-backend.result }}" == "success" ]; then
          echo "‚úÖ Backend deployed to Railway: https://${{ secrets.RAILWAY_SERVICE_NAME }}.railway.app"
        else
          echo "‚ùå Backend Railway deployment failed"
        fi
        
        if [ "${{ needs.deploy-render.result }}" == "success" ]; then
          echo "‚úÖ Backend deployed to Render: https://${{ secrets.RENDER_SERVICE_ID }}.onrender.com"
        else
          echo "‚ùå Backend Render deployment failed"
        fi
        
        echo ""
        echo "üîó Your Social Media Platform is now live!"
        echo "üì± Check the URLs above to access your application"
