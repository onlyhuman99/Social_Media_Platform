name: Deploy to Vercel

on:
  push:
    branches: [ main, master ]

jobs:
  # Build and test backend
  backend:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: SocialMedia
          MYSQL_USER: socialuser
          MYSQL_PASSWORD: socialpass
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run backend tests
      working-directory: ./social-backend
      run: mvn clean test
      env:
        SPRING_PROFILES_ACTIVE: test
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/SocialMedia
        SPRING_DATASOURCE_USERNAME: socialuser
        SPRING_DATASOURCE_PASSWORD: socialpass

    - name: Build backend JAR
      working-directory: ./social-backend
      run: mvn clean package -DskipTests

    - name: Upload backend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-jar
        path: social-backend/target/*.war
        retention-days: 30

  # Deploy frontend to Vercel
  deploy-frontend:
    needs: backend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: social-frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./social-frontend
      run: npm ci

    - name: Run frontend linting
      working-directory: ./social-frontend
      run: npm run lint

    - name: Build frontend
      working-directory: ./social-frontend
      run: npm run build

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./social-frontend
        vercel-args: '--prod'

  # Deploy backend to Railway
  deploy-backend:
    needs: backend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download backend artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-jar
        path: ./artifacts/backend

    - name: Deploy to Railway
      uses: railwayapp/railway-deploy@v1
      with:
        railway-token: ${{ secrets.RAILWAY_TOKEN }}
        service: ${{ secrets.RAILWAY_SERVICE_NAME }}

  # Notify deployment success
  notify:
    needs: [deploy-frontend, deploy-backend]
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Deployment Status
      run: |
        if [ "${{ needs.deploy-frontend.result }}" == "success" ] && [ "${{ needs.deploy-backend.result }}" == "success" ]; then
          echo "üéâ Deployment successful!"
          echo "üåê Frontend: https://your-app.vercel.app"
          echo "üîß Backend: https://your-app.railway.app"
        else
          echo "‚ùå Deployment failed"
          echo "Frontend: ${{ needs.deploy-frontend.result }}"
          echo "Backend: ${{ needs.deploy-backend.result }}"
        fi
